@model TestMVCApp.Models.EmployeeDTO

@{
    ViewBag.Title = "Login";
}

<h2>Login Page</h2>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
	$(document).ready(function () {
		//alert('document.ready');
		$(".numberonly").keypress(function (e) {
			//alert('keyup');
			var charCode = (e.which) ? e.which : event.keyCode
			if (String.fromCharCode(charCode).match(/[^0-9]/g))
				return false;
		});
		//sample.postData();
	});
	var sample = {};
	sample.postData = function () {
		//var ds = document.getElementById("txtEmpId").val;
		if (validateUser()) {
			$.ajax({
				type: "POST",
				url: "@Url.Action("Authentication")",
				dataType: "json",
				traditional: true,
				//async: true,
				contentType: "application/json; charset=utf-8",
				success: function (data) {
					alert('data: ' + data);
				},
				data: JSON.stringify({
                    "employeeName": $("#txtEmpName").val(), "empPassword": $("#txtEmpPassword").val()
				}),
				//accept: 'application/json',
				error: function (data) { alert('error data: ' + data.sample.data.employeeName); },
			});


		} else {
			$.ajax.alert("Error")
		}
    };

	function validateUser() {
		//alert("validate user");
        if ($("#txtEmpName").val() == "") {
			alert("Please enter employee EmpName");
			return false;
		}
        if ($("#txtEmpPassword").val() == "") {
			alert("Please enter employee Password");
			return false;
		}
		return true;
	}
</script>
@using (Html.BeginForm("Authentication", "Employee", FormMethod.Post, new { onsubmit = "sample.postData();" }))

{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

        <div class="form-group">
            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @id = "lblEmpName" , @class = "email control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmpName, new { @id = "txtEmpName", @class = "form-control"})
                @*@Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Password, new { @id = "txtEmpPassword",  @class = "form-control",@type="password" })
                @*@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
            </div>
        </div>
		<div>
			
		</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="loginButton" value="Login" class="btn btn-block" />
            </div>
        </div>
    </div>
}
<div class="form-group-sm" style="animation-fill-mode">
    @Html.ActionLink("Register", "Register")
    @Html.ActionLink("ForgotPassword", "ForgotPassword")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
